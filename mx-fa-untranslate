#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# vim:fileencoding=utf-8

"""
FASTA UNTRANSLATE
James B. Pease
"""

import os
import sys
import argparse
from pylib.mixcore import _LICENSE
from pylib.mixcore import fasta_iter, untranslate



def generate_argparser():
    parser = argparse.ArgumentParser(
        description=__doc__,
        formatter_class=argparse.ArgumentDefaultsHelpFormatter,
        epilog=_LICENSE)
    parser.add_argument('protfasta', type=os.path.abspath,
                        help="input protein fasta file")
    parser.add_argument('nucfasta', type=os.path.abspath,
                        help="input nucleotide fasta file")
    parser.add_argument('--out', type=argparse.FileType('w'),
                        default=sys.stdout, help="output fasta file")
    return parser


def main(arguments=None):
    arguments = arguments if arguments is not None else sys.argv[1:]
    parser = generate_argparser()
    args = parser.parse_args(args=arguments)
    nucleotide_sequences = {}
    for hdr, seq in fasta_iter(args.nucfasta):
        nucleotide_sequences[hdr] = seq
    for hdr, seq in fasta_iter(args.protfasta):
        if hdr not in nucleotide_sequences:
            raise RuntimeError("'{}' not found in nucleotide fasta".format(hdr))
        print(">{}\n{}".format(hdr, untranslate(seq, nucleotide_sequences[hdr])))
    return ''


if __name__ == '__main__':
    main()
